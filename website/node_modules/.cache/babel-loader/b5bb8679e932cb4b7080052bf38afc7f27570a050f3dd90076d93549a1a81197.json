{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Xavier\\\\Desktop\\\\JAVA PROJECT\\\\frontend\\\\website\\\\src\\\\registeration.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport { GoogleOAuthProvider } from '@react-oauth/google';\nimport { GoogleLogin } from '@react-oauth/google';\nimport jwt_decode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [pss, setPss] = useState(\"\");\n  const Register = () => {\n    axios.post('http://localhost:3500/Register', {\n      name,\n      email,\n      pss\n    }).then(data => {\n      if (data.data.status === 'ok') {\n        localStorage.setItem(\"email\", email);\n        window.location.href = `/Login`;\n      } else {\n        alert(\"Invalid information\");\n      }\n    });\n  };\n  const handleGoogleLoginSuccess = async credentialResponse => {\n    try {\n      const details = jwt_decode(credentialResponse.credential);\n      setName(details.name);\n      setEmail(details.email);\n      setPss(\"google\");\n      alert(\"1\");\n\n      // Wait for the state to update before calling the `google` function\n      await google();\n    } catch (error) {\n      console.log('Error in Google login:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"name\",\n        required: true,\n        placeholder: \"Enter name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        required: true,\n        placeholder: \"Enter email id\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        required: true,\n        placeholder: \"Enter password\",\n        value: pss,\n        onChange: e => {\n          setPss(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/Login\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: Register,\n        children: \"Registeration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n        clientId: \"722868784403-l3gf0q81spp8sm5k3rumpvio7e39bmh3.apps.googleusercontent.com\",\n        children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          onSuccess: handleGoogleLoginSuccess,\n          onError: () => {\n            console.log('Login Failed');\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Register, \"fZCoW4t+IEebyH3SrTnA79olOog=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","Link","axios","GoogleOAuthProvider","GoogleLogin","jwt_decode","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","name","setName","email","setEmail","pss","setPss","post","then","data","status","localStorage","setItem","window","location","href","alert","handleGoogleLoginSuccess","credentialResponse","details","credential","google","error","console","log","children","className","type","required","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","to","onClick","clientId","onSuccess","onError","_c","$RefreshReg$"],"sources":["C:/Users/Xavier/Desktop/JAVA PROJECT/frontend/website/src/registeration.js"],"sourcesContent":["import { useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport axios from 'axios';\r\nimport { GoogleOAuthProvider } from '@react-oauth/google';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport jwt_decode from 'jwt-decode'\r\nfunction Register(){\r\n    const [name,setName]=useState(\"\")\r\n    const [email,setEmail]=useState(\"\")\r\n    const [pss,setPss]=useState(\"\")\r\n    const Register=()=>{\r\n        axios.post('http://localhost:3500/Register',\r\n        {\r\n            name,\r\n            email,\r\n            pss,\r\n        }\r\n      )\r\n      .then((data)=>{\r\n        if(data.data.status==='ok'){\r\n            localStorage.setItem(\"email\",email)\r\n            window.location.href = `/Login`\r\n          }else{\r\n             alert(\"Invalid information\");\r\n          }\r\n    })\r\n    }\r\n    const handleGoogleLoginSuccess = async (credentialResponse) => {\r\n        try {\r\n          const details = jwt_decode(credentialResponse.credential);\r\n          setName(details.name);\r\n          setEmail(details.email);\r\n          setPss(\"google\");\r\n          alert(\"1\");\r\n    \r\n          // Wait for the state to update before calling the `google` function\r\n          await google();\r\n        } catch (error) {\r\n          console.log('Error in Google login:', error);\r\n        }\r\n      };\r\n    return(\r\n        <>\r\n        <div className=\"register\">\r\n            <input type=\"name\" required placeholder=\"Enter name\" value={name} onChange={(e)=>setName(e.target.value)} />\r\n            <input type=\"email\" required placeholder=\"Enter email id\" value={email} onChange={(e)=>setEmail(e.target.value)} />\r\n            <input type=\"password\" required placeholder=\"Enter password\" value={pss} onChange={(e)=>{setPss(e.target.value)}} />\r\n            <Link to=\"/Login\"><button>Login</button></Link>\r\n            <button onClick={Register}>Registeration</button>\r\n            <GoogleOAuthProvider clientId=\"722868784403-l3gf0q81spp8sm5k3rumpvio7e39bmh3.apps.googleusercontent.com\">\r\n                <GoogleLogin\r\n                onSuccess={handleGoogleLoginSuccess}\r\n                onError={() => {\r\n                    console.log('Login Failed');\r\n                }}\r\n        />\r\n      </GoogleOAuthProvider>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nexport default Register"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}